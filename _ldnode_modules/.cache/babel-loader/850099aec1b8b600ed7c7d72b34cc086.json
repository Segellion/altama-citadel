{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBAhYpYT94iM5b343MfbqrGJBzKpo4AReE\",\n  authDomain: \"altama-citadel.firebaseapp.com\",\n  databaseURL: \"https://altama-citadel.firebaseio.com\",\n  projectId: \"altama-citadel\",\n  storageBucket: \"altama-citadel.appspot.com\",\n  messagingSenderId: \"1042061303245\",\n  appId: \"1:1042061303245:web:aa0ba0d367fed03e7bb884\",\n  measurementId: \"G-NE86H4JCCD\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider); //const token = \"noideawhatthisis\";\n//const discordProvider = new firebase.auth().signInWithCustomToken(token).catch(function(error) {\n// Handle Errors here.\n//var errorCode = error.code;\n//var errorMessage = error.message;\n//var admin = require(\"firebase-admin\");\n//  var serviceAccount = require(\"path/to/serviceAccountKey.json\");\n//  admin.initializeApp({\n//    credential: admin.credential.cert(serviceAccount),\n//    databaseURL: \"https://altama-citadel.firebaseio.com\"\n//  });\n//});\n\nexport default firebase;","map":{"version":3,"sources":["/Users/dustinhill/Desktop/desktop-cloud/projects/altama-citadel/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAE;AACdC,EAAAA,MAAM,EAAE,yCADM;AAEdC,EAAAA,UAAU,EAAE,gCAFE;AAGdC,EAAAA,WAAW,EAAE,uCAHC;AAIdC,EAAAA,SAAS,EAAE,gBAJG;AAKdC,EAAAA,aAAa,EAAE,4BALD;AAMdC,EAAAA,iBAAiB,EAAE,eANL;AAOdC,EAAAA,KAAK,EAAE,4CAPO;AAQdC,EAAAA,aAAa,EAAE;AARD,CAAd;AAYA,OAAO,MAAMC,yBAAyB,GAAG,OAAMC,QAAN,EAAgBC,cAAhB,KAAmC;AAC1E,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAqB;AACnB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBV,QAA7B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOa,KAAP,EAAa;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF;;AACD,SAAOf,OAAP;AACD,CApBM;AAuBPb,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB;AAEA,OAAO,MAAM6B,IAAI,GAAG9B,QAAQ,CAAC8B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B,C,CAEP;AACA;AACE;AACA;AACA;AACA;AACF;AAEA;AACA;AACA;AACA;AAEA;;AAGA,eAAe/B,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config ={\napiKey: \"AIzaSyBAhYpYT94iM5b343MfbqrGJBzKpo4AReE\",\nauthDomain: \"altama-citadel.firebaseapp.com\",\ndatabaseURL: \"https://altama-citadel.firebaseio.com\",\nprojectId: \"altama-citadel\",\nstorageBucket: \"altama-citadel.appspot.com\",\nmessagingSenderId: \"1042061303245\",\nappId: \"1:1042061303245:web:aa0ba0d367fed03e7bb884\",\nmeasurementId: \"G-NE86H4JCCD\"\n};\n\n\nexport const createUserProfileDocument = async(userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists){\n    const {displayName, email} = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      })\n    } catch (error){\n      console.log('error creating user', error.message)\n    }\n  }\n  return userRef;\n};\n\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt: 'select_account'});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n//const token = \"noideawhatthisis\";\n//const discordProvider = new firebase.auth().signInWithCustomToken(token).catch(function(error) {\n  // Handle Errors here.\n  //var errorCode = error.code;\n  //var errorMessage = error.message;\n  //var admin = require(\"firebase-admin\");\n//  var serviceAccount = require(\"path/to/serviceAccountKey.json\");\n\n//  admin.initializeApp({\n//    credential: admin.credential.cert(serviceAccount),\n//    databaseURL: \"https://altama-citadel.firebaseio.com\"\n//  });\n\n//});\n\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}